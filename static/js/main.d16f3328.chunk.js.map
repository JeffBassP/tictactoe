{"version":3,"sources":["components/Square/Square.js","components/Board/Board.js","components/Game/Game.js","helper.js","components/Users/Users.js","App.js","index.js"],"names":["Square","value","onClick","style","className","Board","squares","map","square","i","key","Game","players","player1","player2","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","xO","Pl","historyPoint","slice","current","window","location","reload","CreateUsers","start","setStart","setPlayer1","setPlayer2","type","placeholder","onChange","event","target","App","setPlayers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d16f3328.chunk.js","sourcesContent":["import React from 'react';\nimport './Square.css';\n\nconst Square = ({\n    value,\n    onClick\n}) => {\n\n    const style = value ? `squares ${value}` : `squares`;\n\n\n        return(\n            <button className={style} onClick={onClick}>\n                {value}\n            </button>\n        )\n}\n\nexport default Square;\n","import React from 'react';\nimport Square from './../Square/Square';\nimport './Board.css'\n\nconst Board = ({squares, onClick}) =>(\n    <div className='board'>\n        {squares.map((square, i) =>(\n            <Square key={i} value={square} onClick={() => onClick(i)}/>\n        ))}\n    </div>\n);\n\nexport default Board;\n","import React, { useState } from 'react';\nimport { calculateWinner } from './../../helper';\nimport Board from './../Board/Board';\n\nimport './Game.css';\n\nconst Game = (players) => {\n\n    const { player1, player2 } = players;\n    const [history, setHistory] = useState([Array(9).fill(null)]);\n    const [stepNumber, setStepNumber] = useState(0);\n    const [xIsNext, setXisNext] = useState(true);\n    const winner = calculateWinner(history[stepNumber]);\n    \n    const xO = xIsNext ? 'X' : 'O';\n    let Pl = xIsNext ? player1 : player2;\n\n    const handleClick = (i) => {\n        const historyPoint = history.slice(0, stepNumber + 1);\n        const current = historyPoint[stepNumber];\n        \n        const squares = [...current];\n\n        if (winner || squares[i]) return;\n\n        squares[i] = xO;\n        setHistory([...historyPoint, squares]);\n        setStepNumber(historyPoint.length);\n        setXisNext(!xIsNext);\n    };\n    const exitPage = () => {\n        window.location.reload(false);\n    }\n    return (\n        <div>\n            <div className='game'>\n\n                <Board squares={history[stepNumber]} onClick={handleClick} />\n                <div className='info-wrapper'>\n\n                    <h3>{winner ? `Winner: ${Pl = xIsNext ? player2 : player1} - ${winner}` : `'Next Player: ${Pl} - ${xO}`}\n                    </h3>\n                </div>\n\n            </div>\n            <div className='buttons-game'>\n                <div className='btn-game' >Restart</div>\n                <div className='btn-game' onClick={exitPage}>Exit</div>\n            </div>\n        </div>\n    );\n};\n\nexport default Game;\n","export function calculateWinner(squares) {\n    \n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}","import React, { useState } from 'react';\nimport './Users.css'\nimport Game from './../Game/Game';\n\nconst CreateUsers = () => {\n\n    const [start, setStart] = useState(false);\n    const [player1, setPlayer1] = useState('');\n    const [player2, setPlayer2] = useState('');\n\n\n    const startGame = () => {\n        setStart(true)    \n    }\n    \n    if (start === true) {\n        return (<Game player1={player1} player2={player2}/>)\n    }\n    return (\n        <div className='create-users'>\n            <h1 className='title-players'>Please enter the Players name:</h1>\n            <input type='text' placeholder='Player 1' value={player1} onChange={event => setPlayer1(event.target.value)} />\n            <input type='text' placeholder='Player 2' value={player2} onChange={event => setPlayer2(event.target.value)} />\n            <div className='buttons-start'>\n                <div className='start-game' onClick={startGame}>Start</div>\n                <div className='start-game'>Back</div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default CreateUsers;","import React, { useState } from 'react';\nimport './App.css';\nimport CreateUsers from './components/Users/Users';\n\n\nfunction App() {\n\n  const [players, setPlayers] = useState(false);\n\n  const showPlayers = () => {\n    setPlayers(true); \n\n  };\n\n  return (\n    \n    <div className=\"App\">\n    \n      <div className='title'>\n      <p>Ｔｉｃ　Ｔａｃ　Ｔｏｅ　ヌフぶ</p>\n      </div>\n      <div>\n        {players ? <div></div> : <div className='button-start' onClick={showPlayers}>Start a new game</div>}\n        {players ? <div></div> : <div className='button-start'>Exit</div>}\n      </div>\n      <div>\n        {players ? <CreateUsers /> : <div></div>}\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}